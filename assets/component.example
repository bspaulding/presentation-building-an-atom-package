'use babel';
import ExtractComponentView from "./extract-component-view";
import { CompositeDisposable } from "atom";

// ...

export default {

  extractComponentView: null,
  modalPanel: null,
  subscriptions: null,

  activate(state) {
    this.extractComponentView = new ExtractComponentView(state.extractComponentViewState);
    this.modalPanel = atom.workspace.addModalPanel({
      item: this.extractComponentView.getElement(),
      visible: false
    });

    // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable
    this.subscriptions = new CompositeDisposable();

    // Register command that toggles this view
    this.subscriptions.add(atom.commands.add("atom-workspace", {
      "extract-component:extract": () => this.toggle()
    }));
  },

  deactivate() {
    this.modalPanel.destroy();
    this.subscriptions.dispose();
    this.extractComponentView.destroy();
  },

  serialize() {
    return {
      extractComponentViewState: this.extractComponentView.serialize()
    };
  },

  toggle() {
    // ...
  },

};
